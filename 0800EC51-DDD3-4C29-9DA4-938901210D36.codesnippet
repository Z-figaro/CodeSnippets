<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>initAccountAndPassword</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>- (void)loadLoginViewController{
    UITextField *account  = [[UITextField alloc]initWithFrame:CGRectMake(80, 300, 220, 40)];
    UITextField *password = [[UITextField alloc]initWithFrame:CGRectMake(80, 360, 220, 40)];
    //建立输入框
    account.borderStyle  = UITextBorderStyleBezel;
    password.borderStyle = UITextBorderStyleBezel;
    //增加外框
    account.placeholder  = @"请输入账户\邮箱";
    password.placeholder = @"请输入密码";
    //设置提示语句
    account.clearButtonMode  = UITextFieldViewModeWhileEditing;
    password.clearButtonMode = UITextFieldViewModeWhileEditing;
    //清除按钮
     password.secureTextEntry = YES;
    //密文输入
    
    //左侧的label
    UILabel *labelAccount =[[UILabel alloc]initWithFrame:CGRectMake(10, 300, 70, 40)];
    labelAccount.text = @"用户名";
    labelAccount.textColor = [UIColor blackColor];//文本颜色
    labelAccount.textAlignment = NSTextAlignmentCenter;//对齐方式
    labelAccount.font = [UIFont boldSystemFontOfSize:20];//设置字体
    [self.view addSubview:labelAccount];
    UILabel *labelPassword =[[UILabel alloc]initWithFrame:CGRectMake(10, 360, 70, 40)];
    labelPassword.text = @"密码";
    labelPassword.textColor = [UIColor blackColor];//文本颜色
    labelPassword.textAlignment = NSTextAlignmentCenter;//对齐方式
    labelPassword.font = [UIFont boldSystemFontOfSize:20];//设置字体
    [self.view addSubview:labelPassword];


//    account.leftViewMode  = UITextFieldViewModeAlways;
//    password.leftViewMode = UITextFieldViewModeAlways;
//    //设置leftview属性
//    
//    UIImageView *imageView=
//    
//    account.leftView  = lblAccount;
//    password.leftView = lblPassword;
    
    //输入控件的属性可以设置其弹出键盘
    account.keyboardType  = UIKeyboardTypeDefault;
    password.keyboardType = UIKeyboardTypeDefault;
    account.returnKeyType  = UIReturnKeySend;
    password.returnKeyType = UIReturnKeySend;
    account.tag  = 100;//方便其他地方获取
    password.tag = 200;

    
    [self.view addSubview:account];
    [self.view addSubview:password];
    
   
    account.delegate  = self;
    password.delegate = self;
    //*******设置代理
    
    //本地通知
    //向上
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(up:) name:UIKeyboardWillShowNotification object:nil];
    //向下
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(down:) name:UIKeyboardWillHideNotification object:nil];
    
    
}
//键盘上
- (void)up:(id)obj{
    //思考：如何获取到键盘动态高度
    //如何通过动画将视图移动到刚好满足输入
    
    //界面上移，防止遮挡
    [UIView animateWithDuration:0.4 animations:^{
        self.view.center = CGPointMake(375.0/2 , 667.0/2 - 100);
    }];
}

//键盘下
- (void)down:(id)obj{
    //界面下移，归位
    [UIView animateWithDuration:0.4 animations:^{
        self.view.center = CGPointMake(375.0/2, 667.0/2);
    }];
    
}

//消除通知
- (void)dealloc{
    [[NSNotificationCenter defaultCenter]removeObserver:self];
    //移除当前界面的所有通知
}
//监听 回调((如果没有执行，请注意设置代理)
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    NSLog(@"刚开始输入");
    textField.text = @"";
    return YES;
}
//键盘里面的字符串可以复制
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    NSLog(@"%@",string);
    return YES;
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    //键盘收回，不是直接让键盘回去，而是让控件取消响应状态
    [textField resignFirstResponder];//取消第一响应状态
    //避免键盘
    
    return YES;
}
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
    //把键盘的第一响应取消
    UITextField *field = (UITextField*)[self.view viewWithTag:100];
    [field resignFirstResponder];
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>0800EC51-DDD3-4C29-9DA4-938901210D36</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>Login—account&amp;password</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
